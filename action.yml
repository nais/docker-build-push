name: "NAIS Docker Build Push"
description: "Build and push docker image to the NAIS registry"
inputs:
  push_image:
    description: "Push image to registry"
    required: true
    default: "true"
  dockerfile:
    description: "Dockerfile"
    required: true
    default: "Dockerfile"
  docker_context:
    description: "Docker context"
    required: true
    default: "."
  tag:
    description: "Custom docker tag"
    required: false
  project_id:
    description: "Google Cloud project ID"
    required: true
  identity_provider:
    description: "Workload Identity Provider"
    required: true
  team:
    description: "Team slug"
    required: true
  cache_from:
    description: "Docker buildx cache from"
    required: false
    default: "type=gha"
  cache_to:
    description: "Docker buildx cache to"
    required: false
    default: "type=gha,mode=max"
  image_suffix:
    description: "Adds a suffiks to the generated docker image name"
    required: false
  pull:
    description: "Pull image before building"
    required: false
    default: "true"
  build_args:
    description: "List of build-time variables"
    required: false
  build_secrets:
    description: "List of secrets to expose to the build (e.g., key=string, GIT_AUTH_TOKEN=mytoken)"
    required: false
  salsa:
    description: "enable image attestation for SLSA"
    required: false
    default: "true"
  byosbom:
    description: "Bring your own, use existing SBOM for SLSA"
    required: false
    default: "auto-generate-for-me-please.json"
outputs:
  salsa:
    description: "SLSA attestation"
    value: ${{ steps.set-outputs.outputs.SALSA }}
  digest:
    description: "Image digest"
    value: ${{ steps.set-outputs.outputs.DIGEST }}
  tag:
    description: "Release tag"
    value: ${{ steps.set-outputs.outputs.NEW_VERSION }}
  image:
    description: "Image name"
    value: ${{ steps.set-outputs.outputs.IMAGE }}
runs:
  using: "composite"
  steps:
    - name: NAIS login
      uses: nais/login@v0
      id: login
      with:
        project_id: ${{ inputs.project_id }}
        identity_provider: ${{ inputs.identity_provider }}
        team: ${{ inputs.team }}
    - name: Setup environment
      shell: bash
      id: "setup"
      run: |
        if [ ! -f "${{ inputs.dockerfile }}" ]; then
          echo "::error ::Dockerfile not found: ${{ inputs.dockerfile }}. Do you need to prepend context or working directory?"
          exit 1
        elif [ ! -d "${{ inputs.docker_context }}" ]; then
          echo "::error ::Docker context not found: ${{ inputs.docker_context }}."
          exit 1
        fi

        suffix="${{ inputs.image_suffix }}"
        echo "REPO_NAME=${GITHUB_REPOSITORY/$GITHUB_REPOSITORY_OWNER\//}$( [[ -n "$suffix" ]] && echo -n "-$suffix" )" >> $GITHUB_OUTPUT
    - name: Docker meta
      id: meta
      uses: docker/metadata-action@96383f45573cb7f253c731d3b3ab81c87ef81934 # ratchet:docker/metadata-action@v5
      with:
        images: |
          ${{ steps.login.outputs.registry }}/${{ steps.setup.outputs.REPO_NAME }}
        tags: |
          type=sha,prefix={{date 'YYYY.MM.DD-HH.mm'}}-,priority=9002
          type=raw,enable=${{ inputs.tag != '' }},value=${{ inputs.tag }},priority=9001
    - name: Build and push
      uses: docker/build-push-action@4a13e500e55cf31b7a5d59a38ab2040ab0f42f56 # ratchet:docker/build-push-action@v5
      id: build_push
      with:
        context: ${{ inputs.docker_context }}
        file: ${{ inputs.dockerfile }}
        push: ${{ inputs.push_image }}
        pull: ${{ inputs.pull }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: ${{ inputs.cache_from }}
        cache-to: ${{ inputs.cache_to }}
        build-args: ${{ inputs.build_args }}
        secrets: ${{ inputs.build_secrets }}
    - name: Check for errors
      if: ${{ failure() && steps.build_push.outcome == 'failure' }}
      shell: bash
      run: |
        echo "::error ::Failed during image build. Is your docker_context set to where your build files are?"
        exit 1
    - name: Generate SBOM, attest and sign image
      if: ${{ inputs.push_image == 'true' && inputs.salsa == 'true' }}
      id: attest-sign
      uses: nais/attest-sign@v1.1.0
      with:
        image_ref: ${{ steps.login.outputs.registry }}/${{ steps.setup.outputs.REPO_NAME }}@${{ steps.build_push.outputs.digest }}
        sbom: ${{ inputs.byosbom }}
    # For some reason, nested composite outputs aren't properly evaluated, so we need to set them again.
    - name: Set outputs
      shell: bash
      id: set-outputs
      run: |
        echo "NEW_VERSION=${{ steps.meta.outputs.version }}" >> $GITHUB_OUTPUT
        echo "IMAGE=${{ fromJSON(steps.meta.outputs.json).tags[0] }}" >> $GITHUB_OUTPUT
        echo "DIGEST=${{ steps.build_push.outputs.digest }}" >> $GITHUB_OUTPUT
        echo "SALSA=${{ steps.attest-sign.outputs.sbom }}" >> $GITHUB_OUTPUT
